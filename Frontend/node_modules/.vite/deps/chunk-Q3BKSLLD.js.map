{
  "version": 3,
  "sources": ["../../@kurkle/color/dist/color.esm.js", "../../chart.js/src/helpers/helpers.core.ts", "../../chart.js/src/helpers/helpers.math.ts", "../../chart.js/src/helpers/helpers.collection.ts", "../../chart.js/src/helpers/helpers.extras.ts", "../../chart.js/src/helpers/helpers.easing.ts", "../../chart.js/src/helpers/helpers.color.ts", "../../chart.js/src/core/core.animations.defaults.js", "../../chart.js/src/core/core.layouts.defaults.js", "../../chart.js/src/helpers/helpers.intl.ts", "../../chart.js/src/core/core.ticks.js", "../../chart.js/src/core/core.scale.defaults.js", "../../chart.js/src/core/core.defaults.js", "../../chart.js/src/helpers/helpers.canvas.ts", "../../chart.js/src/helpers/helpers.options.ts", "../../chart.js/src/helpers/helpers.config.ts", "../../chart.js/src/helpers/helpers.curve.ts", "../../chart.js/src/helpers/helpers.dom.ts", "../../chart.js/src/helpers/helpers.interpolation.ts", "../../chart.js/src/helpers/helpers.rtl.ts", "../../chart.js/src/helpers/helpers.segment.js", "../../chart.js/src/helpers/helpers.dataset.ts", "../../chart.js/src/core/core.animator.js", "../../chart.js/src/core/core.animation.js", "../../chart.js/src/core/core.animations.js", "../../chart.js/src/core/core.datasetController.js", "../../chart.js/src/controllers/controller.bar.js", "../../chart.js/src/controllers/controller.bubble.js", "../../chart.js/src/controllers/controller.doughnut.js", "../../chart.js/src/controllers/controller.line.js", "../../chart.js/src/controllers/controller.polarArea.js", "../../chart.js/src/controllers/controller.pie.js", "../../chart.js/src/controllers/controller.radar.js", "../../chart.js/src/controllers/controller.scatter.js", "../../chart.js/src/core/core.adapters.ts", "../../chart.js/src/core/core.interaction.js", "../../chart.js/src/core/core.layouts.js", "../../chart.js/src/platform/platform.base.js", "../../chart.js/src/platform/platform.basic.js", "../../chart.js/src/platform/platform.dom.js", "../../chart.js/src/platform/index.js", "../../chart.js/src/core/core.element.ts", "../../chart.js/src/core/core.scale.autoskip.js", "../../chart.js/src/core/core.scale.js", "../../chart.js/src/core/core.typedRegistry.js", "../../chart.js/src/core/core.registry.js", "../../chart.js/src/core/core.plugins.js", "../../chart.js/src/core/core.config.js", "../../chart.js/src/core/core.controller.js", "../../chart.js/src/elements/element.arc.ts", "../../chart.js/src/elements/element.line.js", "../../chart.js/src/elements/element.point.ts", "../../chart.js/src/elements/element.bar.js", "../../chart.js/src/plugins/plugin.colors.ts", "../../chart.js/src/plugins/plugin.decimation.js", "../../chart.js/src/plugins/plugin.filler/filler.segment.js", "../../chart.js/src/plugins/plugin.filler/filler.helper.js", "../../chart.js/src/plugins/plugin.filler/filler.options.js", "../../chart.js/src/plugins/plugin.filler/filler.target.stack.js", "../../chart.js/src/plugins/plugin.filler/simpleArc.js", "../../chart.js/src/plugins/plugin.filler/filler.target.js", "../../chart.js/src/plugins/plugin.filler/filler.drawing.js", "../../chart.js/src/plugins/plugin.filler/index.js", "../../chart.js/src/plugins/plugin.legend.js", "../../chart.js/src/plugins/plugin.title.js", "../../chart.js/src/plugins/plugin.subtitle.js", "../../chart.js/src/plugins/plugin.tooltip.js", "../../chart.js/src/scales/scale.category.js", "../../chart.js/src/scales/scale.linearbase.js", "../../chart.js/src/scales/scale.linear.js", "../../chart.js/src/scales/scale.logarithmic.js", "../../chart.js/src/scales/scale.radialLinear.js", "../../chart.js/src/scales/scale.time.js", "../../chart.js/src/scales/scale.timeseries.js", "../../chart.js/src/index.ts"],
  "sourcesContent": ["/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n", "/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || value === undefined;\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n", "import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */\nfunction isNonPrimitive(n: unknown) {\n  return typeof n === 'symbol' || (typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n));\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNonPrimitive(n) && !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n", "import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n", "import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\nimport {isNullOrUndef} from './helpers.core.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, vScale, _parsed} = meta;\n    const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n      if (spanGaps) {\n        const distanceToDefinedLo = (_parsed\n          .slice(0, start + 1)\n          .reverse()\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        start -= Math.max(0, distanceToDefinedLo);\n      }\n      start = _limitValue(start, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n      let end = Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n      if (spanGaps) {\n        const distanceToDefinedHi = (_parsed\n          .slice(end - 1)\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        end += Math.max(0, distanceToDefinedHi);\n      }\n      count = _limitValue(end, start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n", "import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n", "import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n", "const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n", "export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n", "\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n", "import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n", "import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n", "import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n", "import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas?: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  if (!ctx && !canvas) {\n    return;\n  }\n\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n", "import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n", "/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n", "import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n", "import type {ChartArea, Scale} from '../types/index.js';\nimport type PrivateChart from '../core/core.controller.js';\nimport type {Chart, ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart | PrivateChart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart | PrivateChart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  (chart as PrivateChart).height = Math.floor(chart.height);\n  (chart as PrivateChart).width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    (chart as PrivateChart).currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n", "import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n", "export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n", "import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n", "import type {Chart, ChartArea, ChartMeta, Scale, TRBL} from '../types/index.js';\n\nfunction getSizeForArea(scale: Scale, chartArea: ChartArea, field: keyof ChartArea) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta: ChartMeta, chartArea: ChartArea): TRBL {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nexport function getDatasetClipArea(chart: Chart, meta: ChartMeta): TRBL | false {\n  const clip = meta._clip;\n  if (clip.disabled) {\n    return false;\n  }\n  const area = getDatasetArea(meta, chart.chartArea);\n\n  return {\n    left: clip.left === false ? 0 : area.left - (clip.left === true ? 0 : clip.left),\n    right: clip.right === false ? chart.width : area.right + (clip.right === true ? 0 : clip.right),\n    top: clip.top === false ? 0 : area.top - (clip.top === true ? 0 : clip.top),\n    bottom: clip.bottom === false ? chart.height : area.bottom + (clip.bottom === true ? 0 : clip.bottom)\n  };\n}\n", "import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n", "import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n", "import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n", "import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  let found = false;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      found = true;\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n\n  if (!found && !options.all) {\n    return 0;\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n      meta._stacked = isStacked(meta.vScale, meta);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n    const iScaleValue = currentParsed && currentParsed[iScale.axis];\n\n    const skipNull = (meta) => {\n      const parsed = meta._parsed.find(item => item[iScale.axis] === iScaleValue);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  _getAxisCount() {\n    return this._getAxis().length;\n  }\n\n  getFirstScaleIdForIndexAxis() {\n    const scales = this.chart.scales;\n    const indexScaleId = this.chart.options.indexAxis;\n    return Object.keys(scales).filter(key => scales[key].axis === indexScaleId).shift();\n  }\n\n  _getAxis() {\n    const axis = {};\n    const firstScaleAxisId = this.getFirstScaleIdForIndexAxis();\n    for (const dataset of this.chart.data.datasets) {\n      axis[valueOrDefault(\n        this.chart.options.indexAxis === 'x' ? dataset.xAxisID : dataset.yAxisID, firstScaleAxisId\n      )] = true;\n    }\n    return Object.keys(axis);\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    const axisCount = this._getAxisCount();\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount * axisCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount * axisCount);\n      const axisID = this.chart.options.indexAxis === 'x' ? this.getDataset().xAxisID : this.getDataset().yAxisID;\n      const axisNumber = this._getAxis().indexOf(valueOrDefault(axisID, this.getFirstScaleIdForIndexAxis()));\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined) + axisNumber;\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n", "import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      // https://github.com/chartjs/Chart.js/issues/11333\n      if (!this.datasetElementType) {\n        this.addElements();\n      }\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    } else if (this.datasetElementType) {\n      // https://github.com/chartjs/Chart.js/issues/11333\n      delete meta.dataset;\n      this.datasetElementType = false;\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n", "/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<TimeUnit | 'datetime', string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: string): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: string): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number | boolean): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options?: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<TimeUnit | 'datetime', string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase as {\n    new (options?: AnyObject): DateAdapter;\n    override<T extends AnyObject = AnyObject>(\n      members: Partial<Omit<DateAdapter<T>, 'options'>>\n    ): void;\n  }\n};\n", "import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea, isNullOrUndef} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      const result = lookupMethod(data, axis, value);\n      if (spanGaps) {\n        const {vScale} = controller._cachedMeta;\n        const {_parsed} = metaset;\n\n        const distanceToDefinedLo = (_parsed\n          .slice(0, result.lo + 1)\n          .reverse()\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        result.lo -= Math.max(0, distanceToDefinedLo);\n\n        const distanceToDefinedHi = (_parsed\n          .slice(result.hi)\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        result.hi += Math.max(0, distanceToDefinedHi);\n      }\n      return result;\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n", "import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n", "\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n", "/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n", "/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n", "import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n", "import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n", "import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n", "import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n", "import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n", "import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n", "import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n", "import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n", "import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea, _isDomSupported, retinaScale, getDatasetClipArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      // Unset pending resize request now to avoid possible recursion within _resize\n      this._resizeBeforeDraw = null;\n      this._resize(width, height);\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    // @ts-expect-error\n    const clip = getDatasetClipArea(this, meta);\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (clip) {\n      clipArea(ctx, clip);\n    }\n\n    meta.controller.draw();\n\n    if (clip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the event inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n", "import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _angleDiff, _normalizeAngle, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\nfunction clipSelf(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, x, y, outerRadius, innerRadius, options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const outerAngleClip = Math.min(borderWidth / outerRadius, _normalizeAngle(startAngle - endAngle));\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius - borderWidth / 2, startAngle + outerAngleClip / 2, endAngle - outerAngleClip / 2);\n\n  if (innerRadius > 0) {\n    const innerAngleClip = Math.min(borderWidth / innerRadius, _normalizeAngle(startAngle - endAngle));\n    ctx.arc(x, y, innerRadius + borderWidth / 2, endAngle - innerAngleClip / 2, startAngle + innerAngleClip / 2, true);\n  } else {\n    const clipWidth = Math.min(borderWidth / 2, outerRadius * _normalizeAngle(startAngle - endAngle));\n\n    if (borderJoinStyle === 'round') {\n      ctx.arc(x, y, clipWidth, endAngle - PI / 2, startAngle + PI / 2, true);\n    } else if (borderJoinStyle === 'bevel') {\n      const r = 2 * clipWidth * clipWidth;\n      const endX = -r * Math.cos(endAngle + PI / 2) + x;\n      const endY = -r * Math.sin(endAngle + PI / 2) + y;\n      const startX = r * Math.cos(startAngle + PI / 2) + x;\n      const startY = r * Math.sin(startAngle + PI / 2) + y;\n      ctx.lineTo(endX, endY);\n      ctx.lineTo(startX, startY);\n    }\n  }\n  ctx.closePath();\n\n  ctx.moveTo(0, 0);\n  ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n  ctx.clip('evenodd');\n}\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset, borderRadius} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (options.selfJoin && endAngle - startAngle >= PI && borderRadius === 0 && borderJoinStyle !== 'miter') {\n    clipSelf(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n    selfJoin: false,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n    const betweenAngles = _circumference >= TAU || nonZeroBetween;\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n", "import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n", "import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n", "import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n", "import {DoughnutController, PolarAreaController, defaults} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nfunction containsDefaultColorsDefenitions() {\n  return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    const containsColorDefenition = (\n      containsColorsDefinitions(datasets) ||\n      containsColorsDefinition(chartOptions) ||\n      (elements && containsColorsDefinitions(elements)) ||\n      containsDefaultColorsDefenitions());\n\n    if (!options.forceOverride && containsColorDefenition) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n", "import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n", "import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n", "/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n", "import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n", "/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of a segment -> need to add another point before this,\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of a segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n", "import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n", "import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n", "import {clipArea, unclipArea, getDatasetClipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {chart, index, line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  const meta = chart.getDatasetMeta(index);\n  const clip = getDatasetClipArea(chart, meta);\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis, clip});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale, clip} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  let fillColor = below;\n  if (below !== above) {\n    if (property === 'x') {\n      clipVertical(ctx, target, area.top);\n      fill(ctx, {line, target, color: above, scale, property, clip});\n      ctx.restore();\n      ctx.save();\n      clipVertical(ctx, target, area.bottom);\n    } else if (property === 'y') {\n      clipHorizontal(ctx, target, area.left);\n      fill(ctx, {line, target, color: below, scale, property, clip});\n      ctx.restore();\n      ctx.save();\n      clipHorizontal(ctx, target, area.right);\n      fillColor = above;\n    }\n  }\n  fill(ctx, {line, target, color: fillColor, scale, property, clip});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction clipHorizontal(ctx, target, clipX) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(clipX, firstPoint.y);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(clipX, lastPoint.y);\n    }\n  }\n\n  ctx.lineTo(clipX, target.first().y);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale, clip} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, clip, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, clip, bounds) {\n  const chartArea = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n\n  if (property === 'x' || property === 'y') {\n    let left, top, right, bottom;\n\n    if (property === 'x') {\n      left = start;\n      top = chartArea.top;\n      right = end;\n      bottom = chartArea.bottom;\n    } else {\n      left = chartArea.left;\n      top = start;\n      right = chartArea.right;\n      bottom = end;\n    }\n\n    ctx.beginPath();\n\n    if (clip) {\n      left = Math.max(left, clip.left);\n      right = Math.min(right, clip.right);\n      top = Math.max(top, clip.top);\n      bottom = Math.min(bottom, clip.bottom);\n    }\n\n    ctx.rect(left, top, right - left, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n", "/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n", "import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n", "import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n", "import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n", "import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    // No visible items where found, return false so we don't have to divide by 0 which reduces in NaN\n    if (count === 0 || xSet.size === 0) {\n      return false;\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n", "import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n", "import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n", "import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n", "import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n", "import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash || []);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n", "import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n", "import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n    * Generates all timestamps defined in the data.\n    * Important: this method can return ticks outside the min and max range, it's the\n    * responsibility of the calling code to clamp values if needed.\n    * @protected\n    */\n  _generate() {\n    const min = this.min;\n    const max = this.max;\n    let timestamps = super.getDataTimestamps();\n    if (!timestamps.includes(min) || !timestamps.length) {\n      timestamps.splice(0, 0, min);\n    }\n    if (!timestamps.includes(max) || timestamps.length === 1) {\n      timestamps.push(max);\n    }\n    return timestamps.sort((a, b) => a - b);\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n", "export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n"],
  "mappings": "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",
  "names": ["color", "noop", "uid", "id", "isNullOrUndef", "value", "undefined", "isArray", "Array", "type", "Object", "prototype", "toString", "call", "slice", "isObject", "isNumberFinite", "Number", "isFinite", "finiteOrDefault", "defaultValue", "valueOrDefault", "toPercentage", "dimension", "endsWith", "parseFloat", "toDimension", "callback", "fn", "args", "thisArg", "apply", "each", "loopable", "reverse", "i", "len", "keys", "length", "_elementsEqual", "a0", "a1", "ilen", "v0", "v1", "datasetIndex", "index", "clone", "source", "map", "target", "create", "klen", "k", "isValidKey", "key", "indexOf", "_merger", "options", "tval", "sval", "merge", "sources", "merger", "current", "mergeIf", "_mergerIf", "hasOwnProperty", "keyResolvers", "v", "x", "o", "y", "_splitKey", "key", "parts", "split", "keys", "tmp", "part", "endsWith", "slice", "push", "_getKeyResolver", "obj", "k", "resolveObjectKey", "resolver", "_capitalize", "str", "charAt", "toUpperCase", "defined", "value", "isFunction", "setsEqual", "a", "b", "size", "item", "has", "_isClickEvent", "e", "type", "PI", "Math", "TAU", "PITAU", "INFINITY", "Number", "POSITIVE_INFINITY", "RAD_PER_DEG", "HALF_PI", "QUARTER_PI", "TWO_THIRDS_PI", "log10", "sign", "almostEquals", "epsilon", "abs", "niceNum", "range", "roundedRange", "round", "niceRange", "pow", "floor", "fraction", "niceFraction", "_factorize", "result", "sqrt", "i", "sort", "pop", "isNonPrimitive", "n", "Symbol", "toPrimitive", "isNumber", "isNaN", "parseFloat", "isFinite", "almostWhole", "rounded", "_setMinAndMaxByKey", "array", "target", "property", "ilen", "length", "min", "max", "toRadians", "degrees", "toDegrees", "radians", "_decimalPlaces", "isFiniteNumber", "p", "getAngleFromPoint", "centrePoint", "anglePoint", "distanceFromXCenter", "distanceFromYCenter", "radialDistanceFromCenter", "angle", "atan2", "distance", "distanceBetweenPoints", "pt1", "pt2", "_angleDiff", "_normalizeAngle", "_angleBetween", "start", "end", "sameAngleIsFullCircle", "s", "angleToStart", "angleToEnd", "startToAngle", "endToAngle", "_limitValue", "_int16Range", "_isBetween", "_lookup", "table", "cmp", "index", "hi", "lo", "mid", "_lookupByKey", "last", "ti", "_rlookupByKey", "_filterBetween", "values", "arrayEvents", "listenArrayEvents", "listener", "_chartjs", "listeners", "Object", "defineProperty", "configurable", "enumerable", "forEach", "method", "base", "args", "res", "apply", "object", "unlistenArrayEvents", "stub", "indexOf", "splice", "_arrayUnique", "items", "set", "Set", "Array", "from", "requestAnimFrame", "window", "callback", "requestAnimationFrame", "throttled", "fn", "thisArg", "argsToUse", "ticking", "args", "call", "apply", "debounce", "delay", "timeout", "clearTimeout", "setTimeout", "_toLeftRightCenter", "align", "_alignStartEnd", "start", "end", "_textX", "left", "right", "rtl", "check", "_getStartAndCountOfVisiblePoints", "meta", "points", "animationsDisabled", "pointCount", "length", "count", "_sorted", "iScale", "vScale", "_parsed", "spanGaps", "dataset", "options", "axis", "min", "max", "minDefined", "maxDefined", "getUserBounds", "Math", "_lookupByKey", "lo", "getPixelForValue", "distanceToDefinedLo", "slice", "reverse", "findIndex", "point", "isNullOrUndef", "_limitValue", "hi", "distanceToDefinedHi", "_scaleRangesChanged", "xScale", "yScale", "_scaleRanges", "newRanges", "xmin", "xmax", "ymin", "ymax", "changed", "Object", "assign", "atEdge", "t", "elasticIn", "s", "p", "pow", "sin", "TAU", "elasticOut", "effects", "linear", "easeInQuad", "easeOutQuad", "easeInOutQuad", "easeInCubic", "easeOutCubic", "easeInOutCubic", "easeInQuart", "easeOutQuart", "easeInOutQuart", "easeInQuint", "easeOutQuint", "easeInOutQuint", "easeInSine", "cos", "HALF_PI", "easeOutSine", "easeInOutSine", "PI", "easeInExpo", "easeOutExpo", "easeInOutExpo", "easeInCirc", "sqrt", "easeOutCirc", "easeInOutCirc", "easeInElastic", "easeOutElastic", "easeInOutElastic", "easeInBack", "easeOutBack", "easeInOutBack", "easeInBounce", "easeOutBounce", "m", "d", "easeInOutBounce", "isPatternOrGradient", "value", "type", "toString", "color", "Color", "getHoverColor", "saturate", "darken", "hexString", "numbers", "colors", "applyAnimationsDefaults", "defaults", "set", "undefined", "duration", "easing", "from", "loop", "to", "describe", "_fallback", "_indexable", "_scriptable", "name", "properties", "active", "animation", "resize", "show", "animations", "visible", "hide", "v", "applyLayoutsDefaults", "autoPadding", "padding", "top", "bottom", "intlCache", "Map", "getNumberFormat", "locale", "cacheKey", "JSON", "stringify", "formatter", "get", "Intl", "NumberFormat", "formatNumber", "num", "format", "formatters", "values", "isArray", "numeric", "tickValue", "index", "ticks", "chart", "notation", "delta", "maxTick", "abs", "calculateDelta", "logDelta", "log10", "numDecimal", "isNaN", "floor", "minimumFractionDigits", "maximumFractionDigits", "logarithmic", "remain", "significand", "includes", "applyScaleDefaults", "display", "offset", "beginAtZero", "bounds", "clip", "grace", "grid", "lineWidth", "drawOnChartArea", "drawTicks", "tickLength", "tickWidth", "_ctx", "tickColor", "border", "dash", "dashOffset", "width", "title", "text", "minRotation", "maxRotation", "mirror", "textStrokeWidth", "textStrokeColor", "autoSkip", "autoSkipPadding", "labelOffset", "Ticks", "minor", "major", "crossAlign", "showLabelBackdrop", "backdropColor", "backdropPadding", "route", "startsWith", "overrides", "create", "descriptors", "getScope", "node", "key", "keys", "split", "i", "n", "k", "root", "scope", "merge", "Defaults", "constructor", "_descriptors", "_appliers", "backgroundColor", "borderColor", "datasets", "devicePixelRatio", "context", "platform", "getDevicePixelRatio", "elements", "events", "font", "family", "size", "style", "lineHeight", "weight", "hover", "hoverBackgroundColor", "ctx", "hoverBorderColor", "hoverColor", "indexAxis", "interaction", "mode", "intersect", "includeInvisible", "maintainAspectRatio", "onHover", "onClick", "parsing", "plugins", "responsive", "scale", "scales", "showLine", "drawActiveElementsOnTop", "override", "targetScope", "targetName", "scopeObject", "targetScopeObject", "privateName", "defineProperties", "writable", "enumerable", "local", "target", "isObject", "valueOrDefault", "appliers", "forEach", "toFontString", "_measureText", "data", "gc", "longest", "string", "textWidth", "measureText", "push", "_longestText", "arrayOfThings", "cache", "garbageCollect", "save", "ilen", "j", "jlen", "thing", "nestedThing", "restore", "gcLen", "splice", "_alignPixel", "pixel", "currentDevicePixelRatio", "halfWidth", "round", "clearCanvas", "canvas", "getContext", "resetTransform", "clearRect", "height", "drawPoint", "x", "y", "drawPointLegend", "w", "xOffset", "yOffset", "cornerRadius", "xOffsetW", "yOffsetW", "pointStyle", "rotation", "radius", "rad", "RAD_PER_DEG", "translate", "rotate", "drawImage", "beginPath", "ellipse", "arc", "closePath", "moveTo", "TWO_THIRDS_PI", "lineTo", "QUARTER_PI", "SQRT1_2", "rect", "fill", "borderWidth", "stroke", "_isPointInArea", "area", "margin", "clipArea", "unclipArea", "_steppedLineTo", "previous", "flip", "midpoint", "_bezierCurveTo", "bezierCurveTo", "cp1x", "cp2x", "cp1y", "cp2y", "setRenderOpts", "opts", "translation", "fillStyle", "textAlign", "textBaseline", "decorateText", "line", "strikethrough", "underline", "metrics", "actualBoundingBoxLeft", "actualBoundingBoxRight", "actualBoundingBoxAscent", "actualBoundingBoxDescent", "yDecoration", "strokeStyle", "decorationWidth", "drawBackdrop", "oldColor", "fillRect", "renderText", "lines", "strokeWidth", "strokeColor", "backdrop", "strokeText", "maxWidth", "fillText", "Number", "addRoundedRectPath", "h", "topLeft", "bottomLeft", "bottomRight", "topRight", "LINE_HEIGHT", "FONT_STYLE", "toLineHeight", "matches", "match", "numberOrZero", "_readValueToProps", "props", "ret", "objProps", "read", "prop", "toTRBL", "toTRBLCorners", "toPadding", "obj", "toFont", "fallback", "parseInt", "console", "warn", "resolve", "inputs", "info", "cacheable", "_addGrace", "minmax", "change", "toDimension", "keepZero", "add", "createContext", "parentContext", "_createResolver", "scopes", "prefixes", "rootScopes", "getTarget", "finalRootScopes", "_resolve", "Symbol", "toStringTag", "_cacheable", "_scopes", "_rootScopes", "_getTarget", "Proxy", "deleteProperty", "_keys", "_cached", "_resolveWithPrefixes", "getOwnPropertyDescriptor", "Reflect", "getPrototypeOf", "has", "getKeysFromAllScopes", "ownKeys", "storage", "_storage", "_attachContext", "proxy", "subProxy", "descriptorDefaults", "_proxy", "_context", "_subProxy", "_stack", "Set", "setContext", "receiver", "_resolveWithContext", "allKeys", "configurable", "scriptable", "indexable", "_allKeys", "isScriptable", "isFunction", "isIndexable", "readKey", "prefix", "_capitalize", "needsSubResolver", "prototype", "hasOwnProperty", "_resolveScriptable", "_resolveArray", "getValue", "Error", "Array", "join", "delete", "createSubResolver", "arr", "filter", "item", "resolver", "resolveFallback", "parent", "resolveObjectKey", "addScopes", "parentScopes", "parentFallback", "allScopes", "addScopesFromKey", "subGetTarget", "resolveKeysFromAllScopes", "_parseObjectDataRadialScale", "_parsing", "parsed", "r", "parse", "EPSILON", "getPoint", "skip", "getValueAxis", "splineCurve", "firstPoint", "middlePoint", "afterPoint", "current", "next", "d01", "distanceBetweenPoints", "d12", "s01", "s12", "fa", "fb", "monotoneAdjust", "deltaK", "mK", "pointsLen", "alphaK", "betaK", "tauK", "squaredMagnitude", "pointCurrent", "pointAfter", "almostEquals", "monotoneCompute", "valueAxis", "pointBefore", "iPixel", "vPixel", "splineCurveMonotone", "slopeDelta", "sign", "capControlPoint", "pt", "capBezierPoints", "inArea", "inAreaPrev", "inAreaNext", "_updateBezierControlPoints", "controlPoints", "cubicInterpolationMode", "prev", "tension", "_isDomSupported", "document", "_getParentNode", "domNode", "parentNode", "host", "parseMaxStyle", "styleValue", "parentProperty", "valueInPixels", "indexOf", "getComputedStyle", "element", "ownerDocument", "defaultView", "getStyle", "el", "property", "getPropertyValue", "positions", "getPositionedStyle", "styles", "suffix", "result", "pos", "parseFloat", "useOffsetPos", "shadowRoot", "getCanvasPosition", "e", "touches", "source", "offsetX", "offsetY", "box", "getBoundingClientRect", "clientX", "clientY", "getRelativePosition", "event", "borderBox", "boxSizing", "paddings", "borders", "getContainerSize", "maxHeight", "container", "clientWidth", "clientHeight", "containerStyle", "containerBorder", "containerPadding", "INFINITY", "round1", "getMaximumSize", "bbWidth", "bbHeight", "aspectRatio", "margins", "containerSize", "maintainHeight", "retinaScale", "forceRatio", "forceStyle", "pixelRatio", "deviceHeight", "deviceWidth", "setTransform", "supportsEventListenerOptions", "passiveSupported", "passive", "addEventListener", "removeEventListener", "readUsedSize", "_pointInLine", "p1", "p2", "_steppedInterpolation", "_bezierInterpolation", "cp1", "cp2", "a", "b", "c", "getRightToLeftAdapter", "rectX", "setWidth", "xPlus", "leftForLtr", "itemWidth", "getLeftToRightAdapter", "_itemWidth", "getRtlAdapter", "overrideTextDirection", "direction", "original", "getPropertyPriority", "setProperty", "prevTextDirection", "restoreTextDirection", "propertyFn", "between", "_angleBetween", "compare", "_angleDiff", "normalize", "_normalizeAngle", "_isBetween", "normalizeSegment", "getSegment", "segment", "startBound", "endBound", "_boundSegment", "inside", "subStart", "prevValue", "startIsBefore", "endIsBefore", "shouldStart", "shouldStop", "_boundSegments", "segments", "sub", "findStartAndEnd", "solidSegments", "last", "cur", "stop", "_computeSegments", "segmentOptions", "_loop", "splitByStyles", "completeLoop", "_fullLoop", "doSplitByStyles", "chartContext", "_chart", "baseStyle", "readStyle", "_datasetIndex", "datasetIndex", "prevStyle", "addStyle", "l", "st", "dir", "p0", "p0DataIndex", "p1DataIndex", "styleChanged", "borderCapStyle", "borderDash", "borderDashOffset", "borderJoinStyle", "replacer", "getSizeForArea", "chartArea", "field", "getDatasetArea", "getDatasetClipArea", "_clip", "disabled", "Animator", "constructor", "_request", "_charts", "Map", "_running", "_lastDate", "undefined", "_notify", "chart", "anims", "date", "type", "callbacks", "listeners", "numSteps", "duration", "forEach", "fn", "initial", "currentStep", "Math", "min", "start", "_refresh", "requestAnimFrame", "call", "window", "_update", "Date", "now", "remaining", "running", "items", "length", "i", "draw", "item", "_active", "_total", "tick", "pop", "_getAnims", "charts", "get", "complete", "progress", "set", "listen", "event", "cb", "push", "add", "has", "reduce", "acc", "cur", "max", "_duration", "stop", "cancel", "remove", "delete", "transparent", "interpolators", "boolean", "from", "to", "factor", "color", "c0", "helpersColor", "c1", "valid", "mix", "hexString", "number", "Animation", "cfg", "target", "prop", "currentValue", "resolve", "_fn", "_easing", "effects", "easing", "linear", "_start", "floor", "delay", "_loop", "loop", "_target", "_prop", "_from", "_to", "_promises", "active", "update", "elapsed", "remain", "wait", "promises", "Promise", "res", "rej", "resolved", "method", "Animations", "config", "_chart", "_properties", "configure", "isObject", "animationOptions", "Object", "keys", "defaults", "animation", "animatedProps", "getOwnPropertyNames", "key", "option", "isArray", "properties", "_animateOptions", "values", "newOptions", "options", "resolveTargetOptions", "animations", "_createAnimations", "$shared", "awaitAll", "$animations", "then", "props", "charAt", "value", "size", "assign", "animator", "anim", "all", "scaleClip", "scale", "allowedOverflow", "opts", "reverse", "end", "defaultClip", "xScale", "yScale", "x", "y", "top", "right", "bottom", "left", "toClip", "t", "r", "b", "l", "disabled", "getSortedDatasetIndices", "filterVisible", "metasets", "_getSortedDatasetMetas", "ilen", "index", "applyStack", "stack", "dsIndex", "singleMode", "mode", "datasetIndex", "otherValue", "found", "isFinite", "sign", "convertObjectDataToArray", "data", "meta", "iScale", "vScale", "iAxisKey", "axis", "vAxisKey", "adata", "Array", "isStacked", "stacked", "getStackKey", "indexScale", "valueScale", "id", "getUserBounds", "minDefined", "maxDefined", "Number", "NEGATIVE_INFINITY", "POSITIVE_INFINITY", "getOrCreateStack", "stacks", "stackKey", "indexValue", "subStack", "getLastIndexInStack", "positive", "getMatchingVisibleMetas", "updateStacks", "controller", "parsed", "_cachedMeta", "_stacks", "iAxis", "vAxis", "itemStacks", "_top", "_bottom", "visualValues", "_visualValues", "getFirstScaleId", "scales", "filter", "shift", "createDatasetContext", "parent", "createContext", "dataset", "createDataContext", "element", "dataIndex", "raw", "clearStacks", "_parsed", "isDirectUpdateMode", "cloneIfNotShared", "cached", "shared", "createStack", "canStack", "hidden", "_stacked", "DatasetController", "_ctx", "ctx", "_cachedDataOpts", "getMeta", "_type", "_parsing", "_data", "_objectData", "_sharedOptions", "_drawStart", "_drawCount", "enableOptionSharing", "supportsDecimation", "$context", "_syncList", "datasetElementType", "dataElementType", "initialize", "linkScales", "addElements", "fill", "isPluginEnabled", "console", "warn", "updateIndex", "getDataset", "chooseId", "xid", "xAxisID", "valueOrDefault", "yid", "yAxisID", "rid", "rAxisID", "indexAxis", "iid", "iAxisID", "vid", "vAxisID", "getScaleForId", "rScale", "datasets", "getDatasetMeta", "scaleID", "_getOtherScale", "reset", "_destroy", "unlistenArrayEvents", "_dataCheck", "isExtensible", "listenArrayEvents", "buildOrUpdateElements", "resetNewElements", "stackChanged", "oldStacked", "_resyncElements", "scopeKeys", "datasetScopeKeys", "scopes", "getOptionScopes", "createResolver", "getContext", "parsing", "parse", "count", "sorted", "_sorted", "prev", "parseArrayData", "parseObjectData", "parsePrimitiveData", "isNotInOrderComparedToPrev", "labels", "getLabels", "singleScale", "xAxisKey", "yAxisKey", "resolveObjectKey", "getParsed", "getDataElement", "updateRangeFromParsed", "range", "parsedValue", "NaN", "getMinMax", "otherScale", "otherMin", "otherMax", "_skip", "getAllParsedValues", "getMaxOverflow", "getLabelAndValue", "label", "getLabelForValue", "_clip", "clip", "elements", "area", "chartArea", "drawActiveElementsOnTop", "getStyle", "resolveDatasetElementOptions", "resolveDataElementOptions", "context", "_resolveElementOptions", "elementType", "cache", "cacheKey", "sharing", "defined", "datasetElementScopeKeys", "prefixes", "names", "resolveNamedOptions", "freeze", "_resolveAnimations", "transition", "datasetAnimationScopeKeys", "_cacheable", "getSharedOptions", "includeOptions", "sharedOptions", "_animationsDisabled", "_getSharedOptions", "firstOpts", "previouslySharedOptions", "updateSharedOptions", "updateElement", "_setStyle", "removeHoverStyle", "setHoverStyle", "_removeDatasetHoverStyle", "_setDatasetHoverStyle", "arg1", "arg2", "numMeta", "numData", "_insertElements", "_removeElements", "move", "arr", "updateElements", "removed", "splice", "_sync", "args", "_dataChanges", "_onDataPush", "arguments", "_onDataPop", "_onDataShift", "_onDataSplice", "newCount", "_onDataUnshift", "getAllScaleValues", "_cache", "$bar", "visibleMetas", "concat", "_arrayUnique", "sort", "a", "computeMinSampleSize", "_length", "curr", "updateMinAndPrev", "abs", "getPixelForValue", "ticks", "getPixelForTick", "computeFitCategoryTraits", "ruler", "stackCount", "thickness", "barThickness", "ratio", "isNullOrUndef", "categoryPercentage", "barPercentage", "chunk", "pixels", "computeFlexCategoryTraits", "next", "percent", "parseFloatBar", "entry", "startValue", "endValue", "barStart", "barEnd", "_custom", "parseValue", "parseArrayOrPrimitive", "isFloatBar", "custom", "barSign", "actualBase", "isHorizontal", "borderProps", "horizontal", "base", "setBorderSkipped", "edge", "borderSkipped", "enableBorderRadius", "parseEdge", "swap", "startEnd", "orig", "v1", "v2", "v", "setInflateAmount", "inflateAmount", "BarController", "obj", "bars", "getBasePixel", "_getRuler", "vpixels", "head", "_calculateBarValuePixels", "ipixels", "_calculateBarIndexPixels", "center", "height", "width", "_getStacks", "last", "grouped", "currentParsed", "iScaleValue", "skipNull", "find", "val", "isNaN", "indexOf", "_getStackCount", "_getAxisCount", "_getAxis", "getFirstScaleIdForIndexAxis", "indexScaleId", "firstScaleAxisId", "_getStackIndex", "name", "_startPixel", "_endPixel", "baseValue", "minBarLength", "floating", "getDataVisibility", "startPixel", "getPixelForDecimal", "endPixel", "getValueForPixel", "halfGrid", "getLineWidthForValue", "maxBarThickness", "Infinity", "axisCount", "axisID", "axisNumber", "stackIndex", "rects", "numbers", "overrides", "_index_", "offset", "grid", "_value_", "beginAtZero", "BubbleController", "radius", "points", "point", "iPixel", "vPixel", "skip", "getRatioAndOffset", "rotation", "circumference", "cutout", "ratioX", "ratioY", "offsetX", "offsetY", "TAU", "startAngle", "endAngle", "startX", "cos", "startY", "sin", "endX", "endY", "calcMax", "angle", "_angleBetween", "calcMin", "maxX", "maxY", "HALF_PI", "minX", "PI", "minY", "DoughnutController", "innerRadius", "outerRadius", "getter", "_getRotation", "toRadians", "_getCircumference", "_getRotationExtents", "isDatasetVisible", "arcs", "spacing", "getMaxBorderWidth", "getMaxOffset", "maxSize", "toPercentage", "chartWeight", "_getRingWeight", "maxWidth", "maxHeight", "maxRadius", "toDimension", "radiusLength", "_getVisibleDatasetWeightTotal", "total", "calculateTotal", "_getRingWeightOffset", "_circumference", "animateRotate", "calculateCircumference", "animationOpts", "centerX", "centerY", "animateScale", "arc", "metaData", "formatNumber", "locale", "borderAlign", "borderWidth", "hoverBorderWidth", "hoverOffset", "ringWeightOffset", "weight", "descriptors", "_scriptable", "_indexable", "startsWith", "aspectRatio", "plugins", "legend", "generateLabels", "pointStyle", "map", "style", "text", "fillStyle", "backgroundColor", "strokeStyle", "borderColor", "fontColor", "lineWidth", "onClick", "e", "legendItem", "toggleDataVisibility", "LineController", "line", "_dataset", "animationsDisabled", "_getStartAndCountOfVisiblePoints", "_scaleRangesChanged", "_datasetIndex", "_decimated", "showLine", "segment", "animated", "spanGaps", "maxGapLength", "isNumber", "directUpdate", "pointsCount", "prevParsed", "nullData", "border", "firstPoint", "lastPoint", "updateControlPoints", "PolarAreaController", "_parseObjectDataRadialScale", "bind", "_updateRadius", "minSize", "cutoutPercentage", "getVisibleDatasetCount", "xCenter", "yCenter", "datasetStartAngle", "getIndexAngle", "defaultAngle", "countVisibleElements", "_computeAngle", "getDistanceFromCenterForValue", "angleLines", "display", "circular", "pointLabels", "PieController", "RadarController", "_fullLoop", "pointPosition", "getPointPositionForValue", "ScatterController", "registry", "getElement", "interaction", "abstract", "Error", "DateAdapterBase", "override", "members", "prototype", "init", "formats", "format", "diff", "startOf", "endOf", "_date", "binarySearch", "metaset", "intersect", "lookupMethod", "_reversePixels", "_rlookupByKey", "_lookupByKey", "result", "distanceToDefinedLo", "slice", "lo", "findIndex", "distanceToDefinedHi", "hi", "el", "getRange", "evaluateInteractionItems", "position", "handler", "getSortedVisibleDatasetMetas", "j", "getDistanceMetricForAxis", "useX", "useY", "pt1", "pt2", "deltaX", "deltaY", "sqrt", "pow", "getIntersectItems", "useFinalPosition", "includeInvisible", "isPointInArea", "evaluationFunc", "_isPointInArea", "inRange", "getNearestRadialItems", "getProps", "getAngleFromPoint", "getNearestCartesianItems", "distanceMetric", "minDistance", "getCenterPoint", "pointInArea", "distance", "getNearestItems", "getAxisItems", "rangeMethod", "intersectsItem", "modes", "getRelativePosition", "nearest", "STATIC_POSITIONS", "filterByPosition", "array", "pos", "filterDynamicPositionByAxis", "box", "sortByWeight", "v0", "wrapBoxes", "boxes", "layoutBoxes", "stackWeight", "buildStacks", "layouts", "wrap", "includes", "_stack", "placed", "setLayoutDims", "params", "vBoxMaxWidth", "hBoxMaxHeight", "layout", "fullSize", "availableWidth", "availableHeight", "buildLayoutBoxes", "centerHorizontal", "centerVertical", "leftAndTop", "rightAndBottom", "vertical", "getCombinedMax", "maxPadding", "updateMaxPadding", "boxPadding", "updateDims", "getPadding", "newWidth", "outerWidth", "newHeight", "outerHeight", "widthChanged", "w", "heightChanged", "h", "same", "other", "handleMaxPadding", "updatePos", "change", "getMargins", "marginForPositions", "positions", "margin", "fitBoxes", "refitBoxes", "refit", "changed", "setBoxDims", "placeBoxes", "userPadding", "padding", "addBox", "_layers", "z", "removeBox", "layoutItem", "minPadding", "toPadding", "verticalBoxes", "horizontalBoxes", "each", "beforeLayout", "visibleVerticalBoxCount", "BasePlatform", "acquireContext", "canvas", "releaseContext", "addEventListener", "listener", "removeEventListener", "getDevicePixelRatio", "getMaximumSize", "isAttached", "updateConfig", "BasicPlatform", "EXPANDO_KEY", "EVENT_TYPES", "touchstart", "touchmove", "touchend", "pointerenter", "pointerdown", "pointermove", "pointerup", "pointerleave", "pointerout", "isNullOrEmpty", "initCanvas", "renderHeight", "getAttribute", "renderWidth", "boxSizing", "displayWidth", "readUsedSize", "displayHeight", "eventListenerOptions", "supportsEventListenerOptions", "passive", "addListener", "node", "removeListener", "fromNativeEvent", "native", "nodeListContains", "nodeList", "contains", "createAttachObserver", "observer", "MutationObserver", "entries", "trigger", "addedNodes", "removedNodes", "observe", "document", "childList", "subtree", "createDetachObserver", "drpListeningCharts", "oldDevicePixelRatio", "onWindowResize", "dpr", "devicePixelRatio", "resize", "currentDevicePixelRatio", "listenDevicePixelRatioChanges", "unlistenDevicePixelRatioChanges", "createResizeObserver", "container", "_getParentNode", "throttled", "clientWidth", "ResizeObserver", "contentRect", "releaseObserver", "disconnect", "createProxyAndListen", "proxy", "DomPlatform", "removeAttribute", "setAttribute", "proxies", "$proxies", "handlers", "attach", "detach", "isConnected", "_detectPlatform", "_isDomSupported", "OffscreenCanvas", "Element", "tooltipPosition", "hasValue", "final", "ret", "defaultRoutes", "autoSkip", "tickOpts", "determinedMaxTicks", "determineMaxTicks", "ticksLimit", "maxTicksLimit", "majorIndices", "major", "enabled", "getMajorIndices", "numMajorIndices", "first", "newTicks", "skipMajors", "calculateSpacing", "avgMajorSpacing", "round", "tickLength", "_tickSize", "maxScale", "maxChart", "_maxLength", "evenMajorSpacing", "getEvenSpacing", "factors", "_factorize", "ceil", "majorStart", "majorEnd", "len", "reverseAlign", "align", "offsetFromEdge", "getTicksLimit", "ticksLength", "sample", "numItems", "increment", "getPixelForGridLine", "offsetGridLines", "validIndex", "epsilon", "lineValue", "garbageCollect", "caches", "gc", "gcLen", "getTickMarkLength", "drawTicks", "getTitleHeight", "fallback", "font", "toFont", "lines", "lineHeight", "createScaleContext", "createTickContext", "titleAlign", "_toLeftRightCenter", "titleArgs", "titleX", "titleY", "_alignStartEnd", "positionAxisID", "Scale", "_margins", "paddingTop", "paddingBottom", "paddingLeft", "paddingRight", "labelRotation", "_range", "_gridLineItems", "_labelItems", "_labelSizes", "_longestTextCache", "_userMax", "_userMin", "_suggestedMax", "_suggestedMin", "_ticksLength", "_borderValue", "_dataLimitsCached", "setContext", "suggestedMin", "suggestedMax", "finiteOrDefault", "metas", "getTicks", "xLabels", "yLabels", "getLabelItems", "_computeLabelItems", "beforeUpdate", "margins", "grace", "sampleSize", "beforeSetDimensions", "setDimensions", "afterSetDimensions", "beforeDataLimits", "determineDataLimits", "afterDataLimits", "_addGrace", "beforeBuildTicks", "buildTicks", "afterBuildTicks", "samplingEnabled", "_convertTicksToLabels", "beforeCalculateLabelRotation", "calculateLabelRotation", "afterCalculateLabelRotation", "source", "afterAutoSkip", "beforeFit", "fit", "afterFit", "afterUpdate", "reversePixels", "_alignToPixels", "alignToPixels", "_callHooks", "notifyPlugins", "beforeTickToLabelConversion", "generateTickLabels", "callback", "afterTickToLabelConversion", "numTicks", "minRotation", "maxRotation", "tickWidth", "maxLabelDiagonal", "_isVisible", "labelSizes", "_getLabelSizes", "maxLabelWidth", "widest", "maxLabelHeight", "highest", "_limitValue", "title", "toDegrees", "asin", "titleOpts", "gridOpts", "titleHeight", "tickPadding", "angleRadians", "labelHeight", "mirror", "labelWidth", "_calculatePadding", "_handleMargins", "isRotated", "labelsBelowTicks", "offsetLeft", "offsetRight", "isFullSize", "_computeLabelSizes", "widths", "heights", "widestLabelSize", "highestLabelSize", "jlen", "tickFont", "fontString", "nestedLabel", "_resolveTickFontOptions", "string", "_measureText", "valueAt", "idx", "pixel", "decimal", "_int16Range", "_alignPixel", "getDecimalForPixel", "getBaseValue", "optionTicks", "rot", "autoSkipPadding", "_computeGridLineItems", "tl", "borderOpts", "axisWidth", "axisHalfWidth", "alignBorderValue", "borderValue", "alignedLineValue", "tx1", "ty1", "tx2", "ty2", "x1", "y1", "x2", "y2", "limit", "step", "optsAtIndex", "optsAtIndexBorder", "lineColor", "borderDash", "dash", "borderDashOffset", "dashOffset", "tickColor", "tickBorderDash", "tickBorderDashOffset", "crossAlign", "tickAndPadding", "hTickAndPadding", "textAlign", "lineCount", "textOffset", "textBaseline", "_getXAxisLabelAlignment", "_getYAxisLabelAlignment", "labelOffset", "halfCount", "strokeColor", "textStrokeColor", "strokeWidth", "textStrokeWidth", "tickTextAlign", "showLabelBackdrop", "backdrop", "labelPadding", "backdropPadding", "backdropColor", "translation", "_computeLabelArea", "drawBackground", "save", "fillRect", "restore", "drawGrid", "drawLine", "p1", "p2", "setLineDash", "lineDashOffset", "beginPath", "moveTo", "lineTo", "stroke", "drawOnChartArea", "drawBorder", "lastLineWidth", "drawLabels", "clipArea", "renderTextOptions", "renderText", "unclipArea", "drawTitle", "tz", "gz", "bz", "_maxDigits", "fontSize", "TypedRegistry", "scope", "create", "isForType", "isPrototypeOf", "register", "proto", "getPrototypeOf", "parentScope", "isIChartComponent", "registerDefaults", "unregister", "itemDefaults", "merge", "routeDefaults", "describe", "routes", "property", "propertyParts", "split", "sourceName", "sourceScope", "join", "parts", "targetName", "targetScope", "route", "Registry", "controllers", "_typedRegistries", "_each", "addControllers", "addPlugins", "addScales", "getController", "_get", "getPlugin", "getScale", "removeControllers", "removeElements", "removePlugins", "removeScales", "typedRegistry", "arg", "reg", "_getRegistryForType", "_exec", "itemReg", "component", "camelMethod", "_capitalize", "PluginService", "_init", "notify", "hook", "_createDescriptors", "_descriptors", "descriptor", "plugin", "callCallback", "cancelable", "invalidate", "_oldCache", "_notifyStateChanges", "allPlugins", "createDescriptors", "previousDescriptors", "some", "localIds", "local", "getOpts", "pluginOpts", "pluginScopeKeys", "scriptable", "indexable", "allKeys", "getIndexAxis", "datasetDefaults", "datasetOptions", "getAxisFromDefaultScaleID", "getDefaultScaleIDFromAxis", "idMatchesAxis", "axisFromPosition", "determineAxis", "scaleOptions", "toLowerCase", "getAxisFromDataset", "retrieveAxisFromDatasets", "boundDs", "d", "mergeScaleConfig", "chartDefaults", "configScales", "chartIndexAxis", "scaleConf", "error", "_proxy", "defaultId", "defaultScaleOptions", "mergeIf", "defaultID", "initOptions", "initData", "initConfig", "keyCache", "keysCached", "Set", "cachedKeys", "generate", "addIfFound", "Config", "_config", "_scopeCache", "_resolverCache", "platform", "clearCache", "clear", "datasetType", "additionalOptionScopes", "_cachedScopes", "mainScope", "resetCache", "keyLists", "chartOptionScopes", "resolver", "subPrefixes", "getResolver", "needContext", "isFunction", "subResolver", "_attachContext", "descriptorDefaults", "resolverCache", "_createResolver", "p", "hasFunction", "isScriptable", "isIndexable", "KNOWN_POSITIONS", "positionIsHorizontal", "compare2Level", "l1", "l2", "onAnimationsComplete", "onComplete", "onAnimationProgress", "onProgress", "getCanvas", "getElementById", "instances", "getChart", "c", "moveNumericKeys", "intKey", "determineLastEvent", "lastEvent", "inChartArea", "isClick", "Chart", "invalidatePlugins", "userConfig", "initialCanvas", "existingChart", "uid", "_options", "_aspectRatio", "_metasets", "_lastEvent", "_listeners", "_responsiveListeners", "_sortedMetasets", "_plugins", "_hiddenIndices", "attached", "_doResize", "debounce", "resizeDelay", "_initialize", "maintainAspectRatio", "responsive", "retinaScale", "bindEvents", "clearCanvas", "_resize", "_resizeBeforeDraw", "newSize", "newRatio", "onResize", "render", "ensureScalesHaveIDs", "scalesOptions", "axisOptions", "buildOrUpdateScales", "scaleOpts", "updated", "isRadial", "dposition", "dtype", "scaleType", "scaleClass", "hasUpdated", "_updateMetasets", "_destroyDatasetMeta", "_removeUnreferencedMetasets", "buildOrUpdateControllers", "newControllers", "order", "visible", "ControllerClass", "_resetElements", "animsDisabled", "_updateScales", "_checkEventBindings", "_updateHiddenIndices", "_minPadding", "autoPadding", "_updateLayout", "_updateDatasets", "_eventHandler", "_updateHoverStyles", "existingEvents", "newEvents", "events", "setsEqual", "unbindEvents", "changes", "_getUniformDataChanges", "datasetCount", "makeSet", "changeSet", "noArea", "_idx", "_updateDataset", "layers", "_drawDatasets", "_drawDataset", "getDatasetClipArea", "getElementsAtEventForMode", "Interaction", "setDatasetVisibility", "_updateVisibility", "hide", "show", "_stop", "destroy", "toBase64Image", "toDataURL", "bindUserEvents", "bindResponsiveEvents", "_add", "_remove", "detached", "updateHoverStyle", "prefix", "getActiveElements", "setActiveElements", "activeElements", "lastActive", "_elementsEqual", "pluginId", "replay", "hoverOptions", "hover", "deactivated", "activated", "eventFilter", "_handleEvent", "_getActiveElements", "_isClickEvent", "onHover", "version", "clipSelf", "borderJoinStyle", "outerAngleClip", "_normalizeAngle", "innerAngleClip", "clipWidth", "closePath", "rect", "clipArc", "pixelMargin", "angleMargin", "toRadiusCorners", "_readValueToProps", "parseBorderRadius", "angleDelta", "o", "borderRadius", "halfThickness", "innerLimit", "computeOuterLimit", "outerArcLimit", "outerStart", "outerEnd", "innerStart", "innerEnd", "rThetaToXY", "theta", "pathArc", "innerR", "spacingOffset", "alpha", "noSpacingInnerRadius", "noSpacingOuterRadius", "avNogSpacingRadius", "adjustedAngle", "beta", "angleOffset", "outerStartAdjustedRadius", "outerEndAdjustedRadius", "outerStartAdjustedAngle", "outerEndAdjustedAngle", "innerStartAdjustedRadius", "innerEndAdjustedRadius", "innerStartAdjustedAngle", "innerEndAdjustedAngle", "outerMidAdjustedAngle", "pCenter", "p4", "innerMidAdjustedAngle", "p8", "outerStartX", "outerStartY", "outerEndX", "outerEndY", "drawArc", "fullCircles", "inner", "lineJoin", "selfJoin", "ArcElement", "chartX", "chartY", "rAdjust", "nonZeroBetween", "betweenAngles", "withinRadius", "_isBetween", "halfAngle", "halfRadius", "translate", "fix", "radiusOffset", "setStyle", "lineCap", "borderCapStyle", "previous", "getLineMethod", "stepped", "_steppedLineTo", "tension", "cubicInterpolationMode", "_bezierCurveTo", "pathVars", "paramsStart", "paramsEnd", "segmentStart", "segmentEnd", "outside", "pathSegment", "lineMethod", "fastPathSegment", "avgX", "countX", "prevX", "lastY", "pointIndex", "drawX", "truncX", "_getSegmentMethod", "useFastPath", "_getInterpolationMethod", "_steppedInterpolation", "_bezierInterpolation", "_pointInLine", "strokePathWithCache", "path", "_path", "Path2D", "strokePathDirect", "segments", "segmentMethod", "usePath2D", "LineElement", "_points", "_segments", "_pointsUpdated", "_updateBezierControlPoints", "_computeSegments", "interpolate", "_boundSegments", "_interpolate", "interpolated", "capBezierPoints", "hitRadius", "PointElement", "mouseX", "mouseY", "inXRange", "inYRange", "hoverRadius", "drawPoint", "getBarBounds", "bar", "half", "skipOrLimit", "parseBorderWidth", "maxW", "maxH", "toTRBL", "toTRBLCorners", "maxR", "enableBorder", "topLeft", "topRight", "bottomLeft", "bottomRight", "boundingRects", "bounds", "outer", "skipX", "skipY", "skipBoth", "hasRadius", "addNormalRectPath", "inflateRect", "amount", "refRect", "BarElement", "addRectPath", "addRoundedRectPath", "BORDER_COLORS", "BACKGROUND_COLORS", "replace", "getBorderColor", "getBackgroundColor", "colorizeDefaultDataset", "colorizeDoughnutDataset", "colorizePolarAreaDataset", "getColorizer", "containsColorsDefinitions", "k", "containsColorsDefinition", "containsDefaultColorsDefenitions", "forceOverride", "_args", "chartOptions", "containsColorDefenition", "colorizer", "lttbDecimation", "samples", "decimated", "bucketWidth", "sampledIndex", "endIndex", "maxAreaPoint", "maxArea", "nextA", "avgY", "avgRangeStart", "avgRangeEnd", "avgRangeLength", "rangeOffs", "rangeTo", "pointAx", "pointAy", "minMaxDecimation", "minIndex", "maxIndex", "startIndex", "xMin", "xMax", "dx", "lastIndex", "intermediateIndex1", "intermediateIndex2", "cleanDecimatedDataset", "defineProperty", "configurable", "enumerable", "writable", "cleanDecimatedData", "getStartAndCountOfVisiblePointsSimplified", "pointCount", "algorithm", "beforeElementsUpdate", "xAxis", "threshold", "tpoints", "_findSegmentEnd", "_getBounds", "targetSegments", "tgt", "subBounds", "fillSources", "_boundSegment", "fillSource", "_getEdge", "_pointsFromSegments", "boundary", "linePoints", "_createBoundaryLine", "_shouldApplyFill", "_resolveTarget", "sources", "propagate", "visited", "_decodeFill", "parseFillOption", "parseFloat", "decodeTargetIndex", "firstCh", "_getTargetPixel", "_getTargetValue", "fillOption", "_buildStackLine", "sourcePoints", "linesBelow", "getLinesBelow", "addPointsBelow", "below", "unshift", "sourcePoint", "postponed", "findPoint", "pointValue", "firstValue", "lastValue", "simpleArc", "_getTarget", "getLineByIndex", "computeBoundary", "computeCircularBoundary", "computeLinearBoundary", "_drawfill", "lineOpts", "above", "doFill", "fillColor", "clipVertical", "clipHorizontal", "clipY", "lineLoop", "clipX", "src", "notShape", "clipBounds", "interpolatedLineTo", "targetLoop", "interpolatedPoint", "afterDatasetsUpdate", "$filler", "beforeDraw", "drawTime", "beforeDatasetsDraw", "beforeDatasetDraw", "getBoxSize", "labelOpts", "boxHeight", "boxWidth", "usePointStyle", "pointStyleWidth", "itemHeight", "itemsEqual", "Legend", "_added", "legendHitBoxes", "_hoveredItem", "doughnutMode", "legendItems", "columnSizes", "lineWidths", "buildLabels", "labelFont", "_computeTitleHeight", "_fitRows", "_fitCols", "hitboxes", "totalHeight", "row", "itemWidth", "measureText", "_itemHeight", "heightLimit", "totalWidth", "currentColWidth", "currentColHeight", "col", "calculateItemSize", "adjustHitBoxes", "rtl", "rtlHelper", "getRtlAdapter", "hitbox", "leftForLtr", "_draw", "defaultColor", "halfFontSize", "cursor", "drawLegendBox", "lineDash", "drawOptions", "SQRT2", "xPlus", "drawPointLegend", "yBoxTop", "xBoxLeft", "fillText", "strikethrough", "overrideTextDirection", "textDirection", "textWidth", "setWidth", "realX", "_textX", "fontLineHeight", "calculateLegendItemHeight", "restoreTextDirection", "titleFont", "titlePadding", "topPaddingPlusHalfFontSize", "_getLegendItemAt", "hitBox", "lh", "handleEvent", "isListened", "hoveredItem", "sameItem", "onLeave", "calculateItemWidth", "calculateItemHeight", "legendItemText", "_element", "afterEvent", "ci", "useBorderRadius", "Title", "_padding", "textSize", "_drawArgs", "fontOpts", "createTitle", "titleBlock", "WeakMap", "positioners", "average", "xSet", "xAverage", "eventPosition", "nearestElement", "distanceBetweenPoints", "tp", "pushOrConcat", "toPush", "apply", "splitNewlines", "str", "String", "createTooltipItem", "formattedValue", "getTooltipSize", "tooltip", "body", "footer", "bodyFont", "footerFont", "titleLineCount", "footerLineCount", "bodyLineItemCount", "combinedBodyLength", "bodyItem", "before", "after", "beforeBody", "afterBody", "titleSpacing", "titleMarginBottom", "bodyLineHeight", "displayColors", "bodySpacing", "footerMarginTop", "footerSpacing", "widthPadding", "maxLineWidth", "determineYAlign", "doesNotFitWithAlign", "xAlign", "caret", "caretSize", "caretPadding", "determineXAlign", "yAlign", "chartWidth", "determineAlignment", "alignX", "alignY", "paddingAndSize", "getBackgroundPoint", "alignment", "cornerRadius", "getAlignedX", "getBeforeAfterBodyLines", "createTooltipContext", "tooltipItems", "overrideCallbacks", "defaultCallbacks", "beforeTitle", "noop", "labelCount", "afterTitle", "beforeLabel", "tooltipItem", "labelColor", "labelTextColor", "bodyColor", "labelPointStyle", "afterLabel", "beforeFooter", "afterFooter", "invokeCallbackWithFallback", "Tooltip", "opacity", "_eventPosition", "_size", "_cachedAnimations", "_tooltipItems", "dataPoints", "caretX", "caretY", "labelColors", "labelPointStyles", "labelTextColors", "getTitle", "getBeforeBody", "getBody", "bodyItems", "scoped", "getAfterBody", "getFooter", "_createItems", "itemSort", "positionAndSize", "backgroundPoint", "external", "drawCaret", "tooltipPoint", "caretPosition", "getCaretPosition", "x3", "y3", "ptX", "ptY", "pt", "titleColor", "_drawColorBox", "colorX", "rtlColorX", "yOffSet", "colorY", "multiKeyBackground", "outerX", "innerX", "strokeRect", "drawBody", "bodyAlign", "xLinePadding", "fillLineOfText", "bodyAlignForCalculation", "textColor", "drawFooter", "footerAlign", "footerColor", "tooltipSize", "quadraticCurveTo", "_updateAnimationTarget", "animX", "animY", "_willRender", "hasTooltipContent", "globalAlpha", "positionChanged", "_positionChanged", "_ignoreReplayEvents", "afterInit", "afterDraw", "_fallback", "addIfString", "addedLabels", "findOrAddLabel", "lastIndexOf", "_getLabelForValue", "CategoryScale", "_startValue", "_valueRange", "_addedLabels", "added", "generateTicks", "generationOptions", "dataRange", "MIN_SPACING", "precision", "maxTicks", "maxDigits", "includeBounds", "unit", "maxSpaces", "rmin", "rmax", "countDefined", "minSpacing", "niceNum", "niceMin", "niceMax", "numSpaces", "almostWhole", "almostEquals", "decimalPlaces", "_decimalPlaces", "relativeLabelSize", "tickValue", "rad", "LinearScaleBase", "_endValue", "handleTickRangeOptions", "setMin", "setMax", "minSign", "maxSign", "getTickLimit", "stepSize", "computeTickLimit", "numericGeneratorOptions", "_setMinAndMaxByKey", "LinearScale", "Ticks", "formatters", "numeric", "log10Floor", "log10", "changeExponent", "m", "isMajor", "tickVal", "steps", "rangeExp", "rangeStep", "startExp", "minExp", "exp", "significand", "lastTick", "LogarithmicScale", "_zero", "logarithmic", "getTickBackdropHeight", "measureLabelSize", "_longestText", "determineLimits", "fitWithPointLabels", "limits", "valueCount", "_pointLabels", "pointLabelOpts", "additionalAngle", "centerPointLabels", "getPointLabelContext", "getPointPosition", "drawingArea", "plFont", "hLimits", "vLimits", "updateLimits", "setCenterPoint", "_pointLabelItems", "buildPointLabelItems", "createPointLabelItem", "itemOpts", "outerDistance", "extra", "pointLabelPosition", "yForAngle", "getTextAlignForAngle", "leftForTextAlign", "isNotOverlapped", "apexesInArea", "drawPointLabelBox", "backdropLeft", "backdropTop", "backdropWidth", "backdropHeight", "drawPointLabels", "pathRadiusLine", "drawRadiusLine", "gridLineOpts", "createPointLabelContext", "RadialLinearScale", "leftMovement", "rightMovement", "topMovement", "bottomMovement", "angleMultiplier", "scalingFactor", "getValueForDistanceFromCenter", "scaledDistance", "pointLabel", "distanceFromCenter", "getBasePosition", "getPointLabelPosition", "rotate", "animate", "INTERVALS", "millisecond", "common", "second", "minute", "hour", "day", "week", "month", "quarter", "year", "UNITS", "sorter", "input", "adapter", "_adapter", "parser", "isoWeekday", "_parseOpts", "determineUnitForAutoTicks", "minUnit", "capacity", "interval", "MAX_SAFE_INTEGER", "determineUnitForFormatting", "determineMajorUnit", "addTick", "time", "timestamps", "_lookup", "timestamp", "setMajorTicks", "majorUnit", "ticksFromTimestamps", "TimeScale", "_unit", "_majorUnit", "_offsets", "_normalized", "adapters", "displayFormats", "normalized", "_applyBounds", "_getLabelBounds", "getLabelTimestamps", "timeOpts", "_generate", "_filterBetween", "_getLabelCapacity", "initOffsets", "offsetAfterAutoskip", "getDecimalForValue", "minor", "weekday", "hasWeekday", "getDataTimestamps", "tooltipFormat", "datetime", "fmt", "_tickFormatFunction", "formatter", "minorFormat", "majorFormat", "offsets", "_getLabelSize", "ticksOpts", "tickLabelWidth", "cosRotation", "sinRotation", "tickFontSize", "exampleTime", "exampleLabel", "normalize", "table", "prevSource", "nextSource", "prevTarget", "nextTarget", "span", "TimeSeriesScale", "_table", "_minPos", "_tableRange", "_getTimestampsForTable", "buildLookupTable", "registerables"]
}
